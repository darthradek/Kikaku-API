openapi: 3.0.0
info:
    title: Kikaku
    description: MongoDB ExpressJS NodeJS REST API
    version: 1.0.0
servers:
    - url: https://kikaku.herokuapp.com/api
      description: Heroku remote server
    - url: http://localhost:4000/api
      description: Localhost development server
components:
    securitySchemes:
        ApiKeyAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

    schemas:
        Team:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                members:
                    type: array
                    items:
                        type: string
                leader:
                    type: string
                created_by:
                    type: string

        User:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                password:
                    type: string

paths:
    /users/register:
        post:
            tags:
                - User
            summary: Register User
            description: Register a new User in the database
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'

            responses:
                201:
                    description: User created succesfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                    _id:
                                        type: string

    /users/login:
        post:
            tags:
                - User
            summary: Login User
            description: Login a User in order to get JWT token (auth-token)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string

            responses:
                200:
                    description: User logged in succesfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                    data:
                                        type: string

    /teams:
        get:
            tags:
                - Team
            summary: Get list of all teams
            description: Retrieves a list of all Teams.
            responses:
                200:
                    description: List of all Teams.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Team'
    /teams/create:
        post:
            tags:
                - Team
            summary: Create Team
            description: Create new Team and add users
            security:
                - ApiKeyAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Team'

            responses:
                201:
                    description: Team created succesfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Team'

    /teams/{id}:
        get:
            tags:
                - Team
            summary: Get Team by Id
            description: Retrieves a specific Team based on its id.
            parameters:
                - in: path
                  name: id
                  required: true
                  description: MongoDB Team Id
                  schema:
                      type: string
            responses:
                200:
                    description: Team retrieved by Id.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Team'

        put:
            tags:
                - Team
            summary: Update Team Information
            description: Updates a specific Team based on its Id
            security:
                - ApiKeyAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  description: MongoDB Tean Id
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Team'

            responses:
                201:
                    description: Team updated succesfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Team'

        delete:
            tags:
                - Team
            summary: Delete Team by Id
            description: Deletes a specific Team based on it's Id
            security:
                - ApiKeyAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  description: MongoDB Team Id
                  schema:
                      type: string

            responses:
                201:
                    description: Team deleted succesfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Team'
